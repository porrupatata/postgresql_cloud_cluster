#!/bin/bash
set -e

create_root_CA () {
	#################
	HOST='localhost'
	ROOT='root'
	OPENSSL_CNF='/etc/pki/tls/openssl.cnf'
	#################

	# GENERATE CERTIFICATE REQUEST
	openssl req -new -nodes -text -out $ROOT.pem -keyout $ROOT.key -subj "/CN=$ROOT.$HOST"

	# SIGN THE REQUEST WITH THE KEY TO CREATE A ROOT CERTIFICATE AUTHORITY
	openssl x509 -req -in $ROOT.pem -text -days 3650 -extfile $OPENSSL_CNF -extensions v3_ca -signkey $ROOT.key -out $ROOT.crt

	chmod 600 root.key
	chmod 664 root.crt root.pem

}

generate_cert () {
	
        #
	# usage
	# ./02.mkcert.sh <key name>
	#
	#################
	
        HOST='localhost'
	SUBJ="/C=UK/ST=GreaterLondon/L=London/O=XXXXXXX/OU=Secure_connections/CN=$HOST/emailAddress=xxxxxxxxx@xxxxxxxxxx.com"
	REQ="$1.pem"
	KEY="$1.key"
	CRT="$1.crt"

	ROOT="root"
	#################
	# GENERATE PRIVATE KEY
	openssl genrsa -out $KEY 2048

	# GENERATE CERTIFICATE REQUEST
	openssl req -new -sha256 -key $KEY -out $REQ -subj "$SUBJ"

	#
	# CERTIFICATE SIGNED BY ROOT CA
	# which was generated by script "mkcert_root.sh"
	#
	openssl x509 -req -in $REQ -text -days 365 -CA $ROOT.crt -CAkey $ROOT.key -CAcreateserial -out $CRT

	chmod 600 $KEY
	chmod 664 $REQ
	chmod 664 $CRT
	#!/bin/bash
	set -e
	#chown pgbouncer:pgbouncer pgbouncer.*
	#chown postgres:postgres server.*
	chown postgres:postgres pgbouncer.*
}

install_certs () {
	
        # pgbouncer
	mv pgbouncer.* {{ pgbouncer_config_dir }} 
	cp root.crt  {{ pgbouncer_config_dir }}

	# postgres
	#mv server.* /var/lib/pgsql/13/data
	#cp root.crt /var/lib/pgsql/13/data
}

create_root_CA 
generate_cert pgbouncer 
install_certs
